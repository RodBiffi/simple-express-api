{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "0.0.1",
    "title": "Simple API",
    "contact": {
      "email": "rodbiffi@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "/v0",
  "tags": [
    {
      "name": "evenodd",
      "description": "Know whether a given number is even or odd"
    },
    {
      "name": "newNumber",
      "description": "A fresh new number"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/evenodd/{number}": {
      "get": {
        "tags": [
          "evenodd"
        ],
        "summary": "Returns whether a given number is even or odd",
        "description": "",
        "operationId": "isEvenOdd",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number to check for even or odd",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Even or Odd as result value",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string"
                }
              },
              "example": {
                "result": "odd"
              }
            }
          },
          "400": {
            "description": "Input parameter is not a number"
          }
        }
      }
    },
    "/newnumber/{min}/{max}": {
      "post": {
        "tags": [
          "newNumber"
        ],
        "summary": "Generates a number between min and max",
        "description": "",
        "operationId": "numberFromInterval",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "min",
            "in": "path",
            "description": "Minimum interval value",
            "required": true,
            "type": "integer"
          },
          {
            "name": "max",
            "in": "path",
            "description": "Maximum interval value",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "example": 56
            }
          },
          "400": {
            "description": "{min} and/or {max} are not number"
          }
        }
      }
    }
  }
}